单一职责原则(Single Responsibility Principle--SRP):一个类只负责一个功能领域中的相应职责，或者可以定义为：
就一个类而言，应该只有一个引起它变化的原因。

"开闭"原则(Open Close Principle--OCP)：软件实体应当对扩展开放，对修改关闭。

里氏代换原则(Liskov Substitution Principle--LSP)：子类型必须能够替换他们的基类。

依赖倒置原则(Dependency Inversion Principle--DIP)：要依赖于抽象，不要依赖于具体；要针对接口编程，不要针对实现编程。

接口隔离原则(Interface Segregation Principle--ISP)：使用多个专门的接口比使用单一的总接口要好。

合成/聚合复用原则：尽量使用合成/聚合，尽量不要使用继承。

迪米特法则(Law of Demeter--LoD)：最少知识原则，一个对象应当对其他对象尽可能少的了解；只与你直接的朋友们通信，不要跟“陌生人”说话。